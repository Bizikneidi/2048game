on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  checkout:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'

  build:
    runs-on: self-hosted
    needs: [ checkout ]
    steps:
      - name: Compile
        run: mvn compile

  test:
    runs-on: self-hosted
    needs: [ build ]
    steps:
      - name: Run tests
        run: mvn test
      - name: Publish test coverage results
        uses: actions/upload-artifact@v3
        with:
          name: 2048-game-jcoco
          path: target/site/jacoco/*
      - name: Publish test report
        uses: actions/upload-artifact@v3
        with:
          name: 2048-game-surefire
          path: target/surefire-reports/*

  package:
    runs-on: self-hosted
    needs: [ build ]
    steps:
      - name: Package
        run: mvn package
      - name: Publish war
        uses: actions/upload-artifact@v3
        with:
          name: 2048-game-war
          path: target/*.war

  deploy:
    runs-on: self-hosted
    needs: [ package, test ]
    environment:
      name: development
      url: http://localhost:8080/game2048
    steps:
      - name: Download war
        uses: actions/download-artifact@v3
        with:
          name: 2048-game-war
          path: /usr/local/tomcat/webapps

  # deploy:
  #   runs-on: self-hosted
  #   needs: [ package ]
  #   dependencies:
  #     - package
  #   when: manual
  #   environment:
  #     name: test
  #     action: start
  #     url: http://localhost:8080/game2048
  #     on_stop: stop
  #   script:
  #     - docker rm --force game2048
  #     - docker image rm --force game2048
  #     - echo -e 'FROM tomcat:9-jdk17-openjdk-slim\nCOPY ./target/game2048.war /usr/local/tomcat/webapps' | docker build -t game2048 -f- .
  #     - docker run --rm -d --name game2048 -p 8080:8080 game2048

  # stop:
  #   stage: deploy
  #   tags:
  #     - shell
  #   when: manual
  #   environment:
  #     name: test
  #     action: stop
  #     url: http://localhost:8080/game2048
  #   script:
  #     - docker rm --force game2048
  #     - docker image rm --force game2048